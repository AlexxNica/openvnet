#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'rubygems'
require 'bundler/setup'
require 'dcell'
require 'vnet'

Celluloid.logger.level = Logger::FATAL

def info(msg)
  puts "INFO: #{msg}"
end

def success(msg)
  puts "\e[32mSUCCESS:\e[0m #{msg}"
end

def warning(msg, err = nil)
  output = "\e[33mWARNING:\e[0m #{msg}"
  output = output + "\n         #{err.class}: #{err.message}" if err

  puts output
end

def failure(msg, err = nil)
  output = "\e[31mFAILURE:\e[0m #{msg}"
  output = output + "\n         #{err.class}: #{err.message}" if err

  puts output
end

conf = Vnet::Configurations::Common.conf

params = {
  :id => 'vndoctor',
  #TODO: Get address from argument?
  :addr => "tcp://127.0.0.1:19150",
  :registry => {
    :adapter => conf.registry.adapter,
    :host => conf.registry.host,
    :port => conf.registry.port
  }
}

begin
  DCell.start(params)
  success("Connected to Redis and started DCell succesfully")
#TODO: This error isn't rescued properly... figure out why and fix
rescue Exception => e
  failure "We were unable to connect to redis. It is probably not running or " +
          "its IP/port is configured wrong in /etc/openvnet/common.conf.", e
end

begin
  Vnet::Initializers::DB.run(conf.db_uri)
  Vnet::Models::Base.db.test_connection
  success("Connected to the database successfully.")
rescue Exception => e
  #TODO: Make this a warning and ask Vnmgr for database stuff
  failure "Unable to connect to the database. Make sure it is running and " +
          "the connection settings in /etc/openvnet/common.conf are correct.", e
end


puts
info "Examining Vnmgr"
begin
  if vnmgr_node = DCell::Node[:vnmgr]
    if vnmgr_doctor = vnmgr_node[:doctor]
      vnmgr_doctor.examination.each { |diagnosis|
        send(diagnosis.shift, *diagnosis)
      }
    else
      warning "Vnmgr did not have vndoctor enabled. We can't examine it."
    end
  else
    failure "Unable able to connect to Vnmgr. It is most probably not running."
  end
rescue Exception => e
  failure "Vnmgr has crashed with the following error.", e
end
