
require 'sequel'

module Vnmgr
  module NodeModules
    class DbAgent
    
      include Celluloid
      include Celluloid::Logger
      
      M = Vnmgr::Models

      def initialize
        @db = Sequel.connect('mysql://localhost/vnmgr?user=root')
        info 'DbAgent initialized...'
      end
      
      def create_network params
        deserialized_hash = YAML::load(params)
        M::Network.create(deserialized_hash)
        'success'
      end

      def get_network network_uuid
        info "[Method]: get_network #{network_uuid}"
        network = M::Taggable.find(network_uuid)
        network.to_hash
      end
      
      def get_networks
        info '[Method]: get_networks'
        networks = M::Network.all
        networks.map { |network|
          network.to_hash
        }
      end
      
      def delete_network network_uuid
      end
      
      def config_network network_uuid, parameter, value
      end
      
      def attach_vif network_uuid, vif_uuid
      end
      
      def detach_vif network_uuid, vif_uuid
      end
      
      def create_mac_range mac_range_uuid, range_begin, range_end
      end
      
      def get_mac_range mac_range_uuid
      end
      
      def get_mac_ranges
      end
      
      def delete_mac_range mac_range_uuid
      end
      
      def create_dhcp_service network_uuid
      end
      
      def get_dhcp_service network_uuid
      end
      
      def get_dhcp_services
      end
      
      def config_dhcp_service network_uuid
      end
      
      def delete_dhcp_service network_uuid
      end
      
      def create_vif vif_uuid, mac_addr
      end
      
      def get_vif vif_uuid
      end
      
      def get_vifs
      end
      
      def delete_vif vif_uuid
      end
    end
  end
end
